/* GENERAL */
* {
  /* border: solid 1px red; */
  text-decoration: none;
}

:root {
  --main-color: #9356dc;
  --second-color: #ff79da;
  --third-color: #99e2d0;
  --grey: #eaeaea;
  --light-grey: #f3f3f3;
  --darker-green: #008766;
  --footer-background: #353535;
}

@keyframes menu_type {
  0% {
    transform: translateX(-100%);
    opacity: 0;
  }
  95% {
    opacity: 0.5;
  }
  100% {
    transform: translateX(0%);
    opacity: 1;
  }
}
html {
  padding: 0;
  margin: 0;
}

body {
  padding: 0;
  margin: 0;
  font-family: Roboto;
}

/* HEADER */
.header {
  max-height: 113px;
}
.header .header__navigation {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
}
.header .header__navigation i {
  font-size: 24px;
  padding: 20px;
  margin-right: -61px;
  align-items: flex-start;
  color: black;
}
.header .header__logo {
  display: flex;
  width: 150px;
  height: 36px;
  justify-content: center;
  align-items: center;
  margin: auto;
}

/* MAIN */
.menu {
  background-color: white;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.menu .menu__image {
  height: 275px;
  width: 100%;
  padding: 0;
  margin: 0;
  -o-object-fit: cover;
     object-fit: cover;
  /*
        breakpoints are viewport arbitrary values,
        they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
        the breakpoints I used were inspired by Bootstrap =>
        https://getbootstrap.com/docs/5.0/layout/breakpoints/
    */
}
@media only screen and (max-width: 500px) {
  .menu .menu__image {
    height: 200px;
  }
}
.menu .menu_header {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  gap: 20px;
  font-family: shrikhand;
  background-color: var(--light-grey);
  border-radius: 32px 32px 0 0;
  margin-top: -40px;
  padding: 0 4%;
  width: 92%;
  position: relative;
  /*
        breakpoints are viewport arbitrary values,
        they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
        the breakpoints I used were inspired by Bootstrap =>
        https://getbootstrap.com/docs/5.0/layout/breakpoints/
    */
  /*
        breakpoints are viewport arbitrary values,
        they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
        the breakpoints I used were inspired by Bootstrap =>
        https://getbootstrap.com/docs/5.0/layout/breakpoints/
    */
}
@media only screen and (max-width: 500px) {
  .menu .menu_header {
    padding: 0 10px;
  }
}
@media only screen and (min-width: 768px) {
  .menu .menu_header {
    min-width: 768px;
    max-width: 1055px;
    justify-content: center;
  }
}
.menu .menu_header .menu_header__heart {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 24px;
}
.menu .menu__type {
  display: flex;
  -o-object-fit: contain;
     object-fit: contain;
  flex-direction: column;
  background-color: var(--light-grey);
  padding: 0 4%;
  width: 92%;
  /*
        breakpoints are viewport arbitrary values,
        they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
        the breakpoints I used were inspired by Bootstrap =>
        https://getbootstrap.com/docs/5.0/layout/breakpoints/
    */
  /*
        breakpoints are viewport arbitrary values,
        they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
        the breakpoints I used were inspired by Bootstrap =>
        https://getbootstrap.com/docs/5.0/layout/breakpoints/
    */
  animation: menu_type 1s ease-in-out;
}
@media only screen and (max-width: 500px) {
  .menu .menu__type {
    padding: 0 10px;
  }
}
@media only screen and (min-width: 768px) {
  .menu .menu__type {
    min-width: 768px;
    max-width: 1055px;
    justify-content: center;
  }
}
.menu .menu__type--2 {
  animation: menu_type 1.5s ease-in-out;
}
.menu .menu__type--3 {
  animation: menu_type 2s ease-in-out;
}
.menu .menu__type h3 {
  font-size: 16px;
  font-weight: 300;
}
.menu .menu__type span {
  text-decoration: underline;
  text-underline-offset: 7px;
  text-decoration-thickness: 3px;
  text-decoration-color: var(--third-color);
}
.menu .menu__element {
  display: flex;
  flex-direction: row;
  position: relative;
  justify-content: space-between;
  height: 50px;
  background-color: white;
  border-radius: 15px;
  padding: 15px 13.5px 13.5px;
  margin-bottom: 12px;
  overflow: hidden;
  box-shadow: 0px 4px 15px 0px rgba(0, 0, 0, 0.2509803922);
}
.menu .menu__element:hover .menu__valide {
  transform: translateX(-16px);
}
.menu .menu__element:hover .menu__prix p {
  margin-right: 60px;
}
.menu .menu__detail {
  display: flex;
  position: relative;
  flex-direction: column;
  justify-content: space-between;
  padding: 0;
  margin: 0;
  overflow: auto;
  white-space: nowrap;
}
.menu .menu__detail h4,
.menu .menu__detail h5 {
  text-overflow: ellipsis;
  overflow: hidden;
  margin: 0 10px 0 0;
  padding: 0;
}
.menu .menu__detail h4 {
  font-size: 18px;
}
.menu .menu__detail h5 {
  font-size: 15px;
  font-weight: 300;
}
.menu .menu__prix {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
}
.menu .menu__prix p {
  font-size: 15px;
  font-weight: 700;
  margin: 0;
  padding-right: 5px;
  transition: all 0.25s ease-in-out;
}
.menu .menu__valide {
  display: flex;
  position: absolute;
  align-items: center;
  justify-content: center;
  border-radius: 0px 15px 15px 0;
  margin-bottom: -15px;
  margin-left: 60px;
  height: 102%;
  width: 62px;
  font-size: 20px;
  background-color: var(--third-color);
  color: white;
  transition: all 0.3s ease-out;
  transform: translateX(100%);
}
.menu .menu__commande {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0;
  background-color: var(--light-grey);
  padding: 15px 4% 30px;
  width: 92%;
  /*
        breakpoints are viewport arbitrary values,
        they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
        the breakpoints I used were inspired by Bootstrap =>
        https://getbootstrap.com/docs/5.0/layout/breakpoints/
    */
  /*
        breakpoints are viewport arbitrary values,
        they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
        the breakpoints I used were inspired by Bootstrap =>
        https://getbootstrap.com/docs/5.0/layout/breakpoints/
    */
}
@media only screen and (max-width: 500px) {
  .menu .menu__commande {
    padding: 15px 10px 30px;
  }
}
@media only screen and (min-width: 768px) {
  .menu .menu__commande {
    min-width: 768px;
    max-width: 1055px;
    justify-content: center;
  }
}
.menu .menu__button {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 50px;
  width: 218px;
  border-radius: 25px;
  background: linear-gradient(0deg, var(--main-color) -11.44%, var(--second-color) 123.93%);
  font-size: 16px;
  color: white;
  font-size: 16px;
  font-weight: 500;
  border: 0;
  transition: all 0.3s ease-in-out;
}
.menu .menu__button:hover {
  opacity: 0.85;
  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.3764705882);
}

/* FOOTER */
.footer {
  display: flex;
  flex-direction: column;
  background-color: var(--footer-background);
  width: 100%;
  padding: 0px;
  /*
        breakpoints are viewport arbitrary values,
        they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
        the breakpoints I used were inspired by Bootstrap =>
        https://getbootstrap.com/docs/5.0/layout/breakpoints/
    */
}
@media only screen and (min-width: 768px) {
  .footer {
    flex-direction: row-reverse;
    align-items: flex-end;
    height: 114px;
    padding: 10px 10px -10px 10px;
  }
}
.footer .footer__logo {
  color: white;
  font-family: shrikhand;
  font-size: 18px;
  margin-bottom: 16px;
  margin-right: 20px;
  padding: 20px 0px 0px 20px;
}
.footer .footer__link {
  display: flex;
  flex-direction: column;
  gap: 7px;
  padding: 0px 20px 20px;
  /*
        breakpoints are viewport arbitrary values,
        they are defined with the aim of allowing the SCSS/CSS code of your app' behave accordingly to your user's device width,
        the breakpoints I used were inspired by Bootstrap =>
        https://getbootstrap.com/docs/5.0/layout/breakpoints/
    */
}
@media only screen and (min-width: 768px) {
  .footer .footer__link {
    flex-direction: row;
    gap: 20px;
  }
}
.footer .footer__link a {
  color: white;
  font-size: 16px;
}
.footer .footer__link i {
  width: 13px;
  padding-right: 15px;
}/*# sourceMappingURL=Restos.css.map */